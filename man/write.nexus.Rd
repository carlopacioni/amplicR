% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/helper.functions.R
\name{write.nexus}
\alias{write.nexus}
\title{Write a nexus file from a DNAStringSet object}
\usage{
write.nexus(
  x,
  aln = FALSE,
  gapOpening = c(-18, -16),
  gapExtension = c(-2, -1),
  dir.out,
  fn,
  charset = FALSE,
  locusIDs,
  locusLength,
  verbose = FALSE
)
}
\arguments{
\item{x}{Either a \code{character} vector or a \code{DNAStringSet}}

\item{aln}{Logical. Whether x is an alignment}

\item{gapExtension}{Integer (negative). Penalty for extending a gap in the
alignment}

\item{dir.out}{The path where to save the output}

\item{fn}{The output file name}

\item{charset}{Whether a charset block should be added at the end of the
nexus file}

\item{locusIDs}{\code{character} vector with the names of the loci (if
\code{charset=TRUE}) in the same order as they appear in the sequences}

\item{locusLength}{Integer vector with the length of each locus (if
\code{charset=TRUE}) in the same order as they appear in the sequences}

\item{gapOening}{Integer (negative). Penalty for opening a gap in the
alignment}
}
\value{
Writes a nexus file to disk
}
\description{
Takes a \code{character} vector or a \code{DNAStringSet} and write a nexus
file to disk.
}
\details{
If \code{x} is a \code{character} vector, it will convert it to a
\code{DNAStringSet}. if \code{aln=FALSE}, \code{write.nexus} will align the
sequences first and then write the nexus file. If \code{aln=TRUE}, it will
assume that all sequences have the same length and are aligned.

If \code{charset=TRUE}, \code{write.nexus} will append a character block at
the end of the file. This is sometimes used to partition the alignment when
it is imported in software like BEAST2
}
\examples{
seqs <- c("AAATTTT", "GAATTCT")
        names(seqs) <- c("seq1", "seq2")
        x <- Biostrings::DNAStringSet(seqs)
        locusNames <- c("locus1", "locus2")
        locusLen <- c(3, 4)
        tmpDir <- tempdir()
        tmpFile <- tempfile(tmpdir = tmpDir)
        write.nexus(x, aln=TRUE, dir.out=tmpDir, fn=tmpFile, charset=TRUE, 
                locusIDs=locusNames, locusLength=locusLen)
}
